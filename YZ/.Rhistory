set.seed(72)
knitr::opts_chunk$set(echo = TRUE, comment="", warning = FALSE, message = FALSE, tidy.opts=list(width.cutoff=55))
library(data.table)
library(DT)
train.data <- read_csv("fashion-mnist_train.csv",
col_types = cols(.default = "i"))
train.data <- read_csv("../fashion-mnist_train.csv",
col_types = cols(.default = "i"))
train.data <- read_csv("../MNIST-fashion training set-49.csv",
col_types = cols(.default = "i"))
library(data.table)
library(DT)
library(readr)
train.data <- read_csv("../MNIST-fashion training set-49.csv",
col_types = cols(.default = "i"))
test.data <- read_csv("../MNIST-fashion testing set-49.csv",
col_types = cols(.default = "i"))
train.data
set.seed(72)
knitr::opts_chunk$set(echo = TRUE, comment="", warning = FALSE, message = FALSE, tidy.opts=list(width.cutoff=55))
library(data.table)
library(DT)
library(readr)
# Function to rotate matrices
rotate <- function(x) t(apply(x, 2, rev))
# Function to plot image from a matrix x
plot_image <- function(x, title = "", title.color = "black") {
dim(x) <- c(img_rows, img_cols)
image(rotate(rotate(x)), axes = FALSE,
col = grey(seq(0, 1, length = 256)),
main = list(title, col = title.color))
}
# We plot 16 cherry-picked images from the training set
par(mfrow=c(4, 4), mar=c(0, 0.2, 1, 0.2))
for (i in 1:16) {
nr <- i * 10
plot_image(x_train[nr, , , 1],
clothes.labels[as.numeric(train.data[nr, 1] + 1)])
}
set.seed(72)
knitr::opts_chunk$set(echo = TRUE, comment="", warning = FALSE, message = FALSE, tidy.opts=list(width.cutoff=55))
library(data.table)
library(DT)
library(readr)
n.values <- c(500, 1000, 2000)
iterations <- 3
img_rows <- img_cols <- 28
# Function to rotate matrices
rotate <- function(x) t(apply(x, 2, rev))
# Function to plot image from a matrix x
plot_image <- function(x, title = "", title.color = "black") {
dim(x) <- c(img_rows, img_cols)
image(rotate(rotate(x)), axes = FALSE,
col = grey(seq(0, 1, length = 256)),
main = list(title, col = title.color))
}
# We plot 16 cherry-picked images from the training set
par(mfrow=c(4, 4), mar=c(0, 0.2, 1, 0.2))
for (i in 1:16) {
nr <- i * 10
plot_image(x_train[nr, , , 1],
clothes.labels[as.numeric(train.data[nr, 1] + 1)])
}
train.data <- read_csv("../MNIST-fashion training set-49.csv",
col_types = cols(.default = "i"))
test.data <- read_csv("../MNIST-fashion testing set-49.csv",
col_types = cols(.default = "i"))
# Data is 28 pixels big in width and height
img_rows <- img_cols <- 28
#' Data is transformed to matrix (because they are easier indexable) and  pixels
#' are separated from labels.
x_train <- as.matrix(train.data[, 2:dim(train.data)[2]])
y_train <- as.matrix(train.data[, 1])
# Unflattening the data.
dim(x_train) <- c(nrow(x_train), img_rows, img_cols, 1)
n.values <- c(500, 1000, 2000)
iterations <- 3
img_rows <- img_cols <- 28
train.data <- read_csv("../MNIST-fashion training set-49.csv",
col_types = cols(.default = "i"))
test.data <- read_csv("../MNIST-fashion testing set-49.csv",
col_types = cols(.default = "i"))
# Data is 28 pixels big in width and height
img_rows <- img_cols <- 28
train.data <- read_csv("../MNIST-fashion training set-49.csv",
col_types = cols(.default = "i"))
test.data <- read_csv("../MNIST-fashion testing set-49.csv",
col_types = cols(.default = "i"))
#' Data is transformed to matrix (because they are easier indexable) and  pixels
#' are separated from labels.
x_train <- as.matrix(train.data[, 2:dim(train.data)[2]])
y_train <- as.matrix(train.data[, 1])
# Unflattening the data.
dim(x_train) <- c(nrow(x_train), img_rows, img_cols, 1)
dim(test.data)
for (i in 1:16) {
nr <- i * 10
plot_image(x_train[nr, , , 1],
clothes.labels[as.numeric(train.data[nr, 1] + 1)])
}
n.values <- c(500, 1000, 2000)
iterations <- 3
img_rows <- img_cols <- 7
# Function to rotate matrices
rotate <- function(x) t(apply(x, 2, rev))
# Function to plot image from a matrix x
plot_image <- function(x, title = "", title.color = "black") {
dim(x) <- c(img_rows, img_cols)
image(rotate(rotate(x)), axes = FALSE,
col = grey(seq(0, 1, length = 256)),
main = list(title, col = title.color))
}
#' Data is transformed to matrix (because they are easier indexable) and  pixels
#' are separated from labels.
x_train <- as.matrix(train.data[, 2:dim(train.data)[2]])
y_train <- as.matrix(train.data[, 1])
# Unflattening the data.
dim(x_train) <- c(nrow(x_train), img_rows, img_cols, 1)
# The same for test set.
x_test <- as.matrix(test.data[, 2:dim(train.data)[2]])
y_test <- as.matrix(test.data[, 1])
dim(x_test) <- c(nrow(x_test), img_rows, img_cols, 1)
clothes.labels <-c( "T-shirt/top", "Trouser", "Pullover", "Dress", "Coat",
"Sandal", "Shirt", "Sneaker", "Bag", "Ankle boot")
n.values <- c(500, 1000, 2000)
iterations <- 3
# Data is 28 pixels big in width and height
img_rows <- img_cols <- 7
# Function to rotate matrices
rotate <- function(x) t(apply(x, 2, rev))
# Function to plot image from a matrix x
plot_image <- function(x, title = "", title.color = "black") {
dim(x) <- c(img_rows, img_cols)
image(rotate(rotate(x)), axes = FALSE,
col = grey(seq(0, 1, length = 256)),
main = list(title, col = title.color))
}
# We plot 16 cherry-picked images from the training set
par(mfrow=c(4, 4), mar=c(0, 0.2, 1, 0.2))
for (i in 1:16) {
nr <- i * 10
plot_image(x_train[nr, , , 1],
clothes.labels[as.numeric(train.data[nr, 1] + 1)])
}
# Function to rotate matrices
rotate <- function(x) t(apply(x, 2, rev))
# Function to plot image from a matrix x
plot_image <- function(x, title = "", title.color = "black") {
dim(x) <- c(img_rows, img_cols)
image(rotate(rotate(x)), axes = FALSE,
col = grey(seq(0, 1, length = 256)),
main = list(title, col = title.color))
}
# We plot 16 cherry-picked images from the training set
par(mfrow=c(4, 4), mar=c(0, 0.2, 1, 0.2))
for (i in 1:16) {
nr <- i * 10
plot_image(x_train[nr, , , 1],
clothes.labels[as.numeric(train.data[nr, 1] + 1)])
}
# Function to rotate matrices
rotate <- function(x) t(apply(x, 2, rev))
# Function to plot image from a matrix x
plot_image <- function(x, title = "", title.color = "black") {
dim(x) <- c(img_rows, img_cols)
image(rotate(rotate(x)), axes = FALSE,
col = grey(seq(0, 1, length = 256)),
main = list(title, col = title.color))
}
# We plot 16 cherry-picked images from the training set
par(mfrow=c(4, 4), mar=c(0, 0.2, 1, 0.2))
for (i in 1:16) {
nr <- i * 10
plot_image(x_train[nr, , , 1],
clothes.labels[as.numeric(train.data[nr, 1] + 1)])
}
# Function to rotate matrices
rotate <- function(x) t(apply(x, 2, rev))
# Function to plot image from a matrix x
plot_image <- function(x, title = "", title.color = "black") {
dim(x) <- c(img_rows, img_cols)
image(rotate(rotate(x)), axes = FALSE,
col = grey(seq(0, 1, length = 256)),
main = list(title, col = title.color))
}
# We plot 16 cherry-picked images from the training set
par(mfrow=c(4, 4), mar=c(0, 0.2, 1, 0.2))
for (i in 1:16) {
nr <- i * 10
plot_image(x_train[nr, , , 1],
clothes.labels[as.numeric(train.data[nr, 1] + 1)])
}
# Function to rotate matrices
rotate <- function(x) t(apply(x, 2, rev))
# Function to plot image from a matrix x
plot_image <- function(x, title = "", title.color = "black") {
dim(x) <- c(img_rows, img_cols)
image(rotate(rotate(x)), axes = FALSE,
col = grey(seq(0, 1, length = 256)),
main = list(title, col = title.color))
}
# We plot 16 cherry-picked images from the training set
par(mfrow=c(4, 4), mar=c(0, 0.2, 1, 0.2))
for (i in 1:16) {
nr <- i * 10
plot_image(x_train[nr, , , 1],
clothes.labels[as.numeric(train.data[nr, 1] + 1)])
}
dim(x_train)
train.data[, 2:dim(train.data)[2]]
train.data
as.matrix(train.data[, 2:dim(train.data)[2]])
set.seed(72)
knitr::opts_chunk$set(echo = TRUE, comment="", warning = FALSE, message = FALSE, tidy.opts=list(width.cutoff=55))
library(data.table)
library(DT)
library(readr)
n.values <- c(500, 1000, 2000)
iterations <- 3
# Data is 28 pixels big in width and height
img_rows <- img_cols <- 7
# Function to rotate matrices
rotate <- function(x) t(apply(x, 2, rev))
# Function to plot image from a matrix x
plot_image <- function(x, title = "", title.color = "black") {
dim(x) <- c(img_rows, img_cols)
image(rotate(rotate(x)), axes = FALSE,
col = grey(seq(0, 1, length = 256)),
main = list(title, col = title.color))
}
# We plot 16 cherry-picked images from the training set
par(mfrow=c(4, 4), mar=c(0, 0.2, 1, 0.2))
for (i in 1:16) {
nr <- i * 10
plot_image(x_train[nr, , , 1],
clothes.labels[as.numeric(train.data[nr, 1] + 1)])
}
set.seed(72)
knitr::opts_chunk$set(echo = TRUE, comment="", warning = FALSE, message = FALSE, tidy.opts=list(width.cutoff=55))
library(data.table)
library(DT)
library(readr)
n.values <- c(500, 1000, 2000)
iterations <- 3
# Data is 28 pixels big in width and height
img_rows <- img_cols <- 7
# Function to rotate matrices
rotate <- function(x) t(apply(x, 2, rev))
# Function to plot image from a matrix x
plot_image <- function(x, title = "", title.color = "black") {
dim(x) <- c(img_rows, img_cols)
image(rotate(rotate(x)), axes = FALSE,
col = grey(seq(0, 1, length = 256)),
main = list(title, col = title.color))
}
train.data <- read_csv("../MNIST-fashion training set-49.csv",
col_types = cols(.default = "i"))
test.data <- read_csv("../MNIST-fashion testing set-49.csv",
col_types = cols(.default = "i"))
#' Data is transformed to matrix (because they are easier indexable) and  pixels
#' are separated from labels.
x_train <- as.matrix(train.data[, 2:dim(train.data)[2]])
y_train <- as.matrix(train.data[, 1])
# Unflattening the data.
dim(x_train) <- c(nrow(x_train), img_rows, img_cols, 1)
# The same for test set.
x_test <- as.matrix(test.data[, 2:dim(train.data)[2]])
y_test <- as.matrix(test.data[, 1])
dim(x_test) <- c(nrow(x_test), img_rows, img_cols, 1)
clothes.labels <-c( "T-shirt/top", "Trouser", "Pullover", "Dress", "Coat", "Sandal", "Shirt", "Sneaker", "Bag", "Ankle boot")
# We plot 16 cherry-picked images from the training set
par(mfrow=c(4, 4), mar=c(0, 0.2, 1, 0.2))
for (i in 1:16) {
nr <- i * 10
plot_image(x_train[nr, , , 1],
clothes.labels[as.numeric(train.data[nr, 1] + 1)])
}
x_test
x_test[1,]
x_test[1]
x_test[1,,,]
x_test[1,,,] == x_test[2,,,]
x_test
read_csv("../MNIST-fashion training set-49.csv")
read.csv(file = "../MNIST-fashion testing set-49.csv", header = TRUE, sep = ",", quote = "\"",
dec = ".", fill = TRUE, comment.char = "", …)
read.csv(file = "../MNIST-fashion testing set-49.csv", header = TRUE, sep = ",", quote = "\"",
dec = ".", fill = TRUE, comment.char = "")
read.csv("../MNIST-fashion testing set-49.csv", header = TRUE, sep = ",", quote = "\"",
dec = ".", fill = TRUE, comment.char = "")
read.csv("../MNIST-fashion testing set-49.csv", header = TRUE, sep = ",", quote = "\"",
dec = ".")
pwdwd
pwd
getwd
getwd()
cd("YZ")
setwd("/Users/leo/Desktop/GR5243_midterm_13/YZ")
getwd()
getwdread.csv(file = "../MNIST-fashion testing set-49.csv", header = TRUE, sep = ",", quote = "\"",
+          dec = ".", fill = TRUE, comment.char = "")
read.csv(file = "../MNIST-fashion testing set-49.csv", header = TRUE, sep = ",", quote = "\"",
+          dec = ".", fill = TRUE, comment.char = "")
)
read.csv(file = "../MNIST-fashion testing set-49.csv", header = TRUE, sep = ",", quote = "\"",
+          dec = ".", fill = TRUE, comment.char = "")
read_csv(file = "../MNIST-fashion testing set-49.csv")
a = read_csv(file = "../MNIST-fashion testing set-49.csv")
head(a)
a = read.csv(file = "../MNIST-fashion testing set-49.csv",header)
a = read.csv(file = "../MNIST-fashion testing set-49.csv")
head(a)
a = read.csv(file = "../MNIST-fashion testing set-49.csv", header = FALSE)
head(a)
a[-1,]
b = a[-1,]
b
head(b)
b[1,]
train.data <- read.csv("../MNIST-fashion training set-49.csv")
test.data <- read.csv("../MNIST-fashion testing set-49.csv")
set.seed(72)
knitr::opts_chunk$set(echo = TRUE, comment="", warning = FALSE, message = FALSE, tidy.opts=list(width.cutoff=55))
n.values <- c(500, 1000, 2000)
iterations <- 3
# Data is 28 pixels big in width and height
img_rows <- img_cols <- 7
# Function to rotate matrices
rotate <- function(x) t(apply(x, 2, rev))
# Function to plot image from a matrix x
plot_image <- function(x, title = "", title.color = "black") {
dim(x) <- c(img_rows, img_cols)
image(rotate(rotate(x)), axes = FALSE,
col = grey(seq(0, 1, length = 256)),
main = list(title, col = title.color))
}
train.data <- read.csv("../MNIST-fashion training set-49.csv")
test.data <- read.csv("../MNIST-fashion testing set-49.csv")
#' Data is transformed to matrix (because they are easier indexable) and  pixels
#' are separated from labels.
x_train <- as.matrix(train.data[, 2:dim(train.data)[2]])
y_train <- as.matrix(train.data[, 1])
# Unflattening the data.
dim(x_train) <- c(nrow(x_train), img_rows, img_cols, 1)
# The same for test set.
x_test <- as.matrix(test.data[, 2:dim(train.data)[2]])
y_test <- as.matrix(test.data[, 1])
dim(x_test) <- c(nrow(x_test), img_rows, img_cols, 1)
clothes.labels <-c( "T-shirt/top", "Trouser", "Pullover", "Dress", "Coat", "Sandal", "Shirt", "Sneaker", "Bag", "Ankle boot")
# We plot 16 cherry-picked images from the training set
par(mfrow=c(4, 4), mar=c(0, 0.2, 1, 0.2))
for (i in 1:16) {
nr <- i * 10
plot_image(x_train[nr, , , 1],
clothes.labels[as.numeric(train.data[nr, 1] + 1)])
}
dim(y_test)
fit <- rpart(Kyphosis ~ Age + Number + Start, data = kyphosis)
